{
  "plugins": [
    "stylelint-scss",
  ],

  "rules": {
    "color-hex-case": [ "lower", {
      "message": "We expect hex colors to be lowercase",
      "severity": "warning"
    } ],
    "color-hex-length": [ "long", {
      "message": "We expect 6-digit hex colors",
      "severity": "warning"
    } ],
    "color-named": [ "never", {
      "message": "We expect no named colors",
      "severity": "warning"
    } ],
    "color-no-invalid-hex": [ true, {
      "message": "We expect no invalid hex",
      "severity": "warning"
    } ],
    "font-family-name-quotes": [ "always-unless-keyword", {
      "message": "We expect quotes around font family names",
      "severity": "warning"
    } ],
    "font-family-no-duplicate-names": [ true, {
      "message": "We expect a font family name to be mentioned just once",
      "severity": "warning"
    } ],
    "font-weight-notation": [ "numeric", {
      "message": "We expect a font weight to be in numeric notation",
      "severity": "warning"
    } ],
    "function-blacklist": [ ["rgba"], {
      "message": "We do not expect rgba function to be used",
      "severity": "warning",
      "_comment": "severity was error"
    } ],
    "function-calc-no-unspaced-operator": [ true, {
      "message": "We expect spaces around operators",
      "severity": "warning"
    } ],
    "function-comma-newline-after": [ "never-multi-line", {
      "message": "We do not expect multiline functions",
      "severity": "warning"
    } ],
    "function-comma-newline-before": [ "never-multi-line", {
      "message": "We do not expect multiline functions",
      "severity": "warning"
    } ],
    "function-comma-space-after": [ "always", {
      "message": "We expect spaces in after comma's in functions",
      "severity": "warning"
    } ],
    "function-comma-space-before": [ "never-single-line", {
      "message": "We do not expect spaces between first argument and comma in functions",
      "severity": "warning"
    } ],
    "function-linear-gradient-no-nonstandard-direction": [ true, {
      "message": "We expect standard syntax for linear gradient definitions",
      "severity": "warning"
    } ],
    "function-max-empty-lines": [ 0, {
      "message": "We expect no newlines between function arguments",
      "severity": "warning"
    } ],
    "function-name-case": [ "lower", {
      "message": "We expect function names to be lower case",
      "severity": "warning"
    } ],
    "function-parentheses-newline-inside": [ "never-multi-line", {
      "message": "We do not expect multiline function parentheses",
      "severity": "warning"
    } ],
    "function-parentheses-space-inside": [ "always-single-line", {
      "message": "We do not expect space nor multiline in function parentheses",
      "severity": "warning"
    } ],
    "function-url-no-scheme-relative": [ true, {
      "message": "We do not expect an url that begins with // followed by a host",
      "severity": "warning",
      "_comment": "severity was error"
    } ],
    "function-url-scheme-whitelist": [ ["data"], {
        "message": "We do not expect external url scheme",
        "severity": "warning",
        "_comment": "severity was error"
    }],
    "function-whitespace-after": [ "always", {
        "message": "We not expect whitespace after functions",
        "severity": "warning"
    }],

    "number-leading-zero": [ "always", {
        "message": "We expect leading zeros with fractional numbers less than 1",
        "severity": "warning"
    }],
    "number-max-precision": [ 2, {
        "message": "We expect max 2 decimals",
        "severity": "warning"
    }],
    "number-no-trailing-zeros": [ true, {
        "message": "We no trailing zeros",
        "severity": "warning"
    }],
    "string-no-newline": [ true, {
        "message": "We expect no newlines in strings",
        "severity": "warning"
    }],
    "string-quotes": [ "double", {
        "message": "We expect double quotes around strings",
        "severity": "warning"
    }],
    "length-zero-no-unit": [ , {
        "message": "We expect no unit when using zero",
        "severity": "warning"
    }],
    "time-min-milliseconds": [ 100, {
        "message": "We expect time values to be at least 100ms",
        "severity": "warning"
    }],
    "unit-blacklist": [ ["rem"], {
        "message": "We do not expect these units",
        "severity": "warning"
    }],
    "unit-case": [ "lower", {
        "message": "We expect unit cases to be lower",
        "severity": "warning"
    }],
    "unit-no-unknown": [ true, {
        "message": "We expect no unknown units",
        "severity": "warning"
    }],
    "value-keyword-case": [ "lower", {
        "message": "We expect value cases to be lower",
        "severity": "warning"
    }],
    "value-no-vendor-prefix": [ true, {
        "message": "We expect no vendor prefixes",
        "severity": "warning"
    }],
    "value-list-comma-newline-after": [ "never-multi-line", {
        "message": "We expect no newlines in value lists",
        "severity": "warning"
    }],
    "value-list-comma-newline-before": [ "never-multi-line", {
        "message": "We expect no newlines in value lists",
        "severity": "warning"
    }],
    "value-list-comma-space-after": [ "always", {
        "message": "We expect no spaces in value lists",
        "severity": "warning"
    }],
    "value-list-comma-space-before": [ "never-single-line", {
        "message": "We expect no spaces in value lists",
        "severity": "warning"
    }],
    "value-list-max-empty-lines": [ 0, {
        "message": "We expect no newlines in value lists",
        "severity": "warning"
    }],
    "shorthand-property-no-redundant-values": [ true, {
        "message": "We expect no redundant values",
        "severity": "warning"
    }],
    "property-blacklist": [ [], {
        "message": "We do not expect these properties",
        "severity": "warning"
    }],
    "property-case": [ "lower", {
        "message": "We expect property cases to be lower case",
        "severity": "warning"
    }],
    "property-no-unknown": [ true, {
        "message": "We do not expect unknown properties",
        "severity": "warning"
    }],
    "property-no-vendor-prefix": [ true, {
        "message": "We do not expect vendor prefixed properties",
        "severity": "warning"
    }],
    "keyframe-declaration-no-important": [ true, {
        "message": "We do not expect !important in keyframe declarations",
        "severity": "warning"
    }],
    "declaration-bang-space-after": [ "never", {
        "message": "We do not expect a space after the declaration bang",
        "severity": "warning"
    }],
    "declaration-bang-space-before": [ "always", {
        "message": "We expect a space before the declaration bang",
        "severity": "warning"
    }],
    "declaration-colon-newline-after": [ "always-multi-line", {
        "message": "We do not expect a newline after a declaration colon",
        "severity": "warning"
    }],
    "declaration-colon-space-after": [ "always", {
        "message": "We expect a space before a declaration colon",
        "severity": "warning"
    }],
    "declaration-colon-space-before": [ "never", {
        "message": "We do not expect a space before a declaration colon",
        "severity": "warning"
    }],
    "declaration-empty-line-before": [ "never", {
        "message": "We do not expect an empty line before a declaration",
        "severity": "warning"
    }],
    "declaration-no-important": [ true, {
        "message": "We do not expect !important in a declaration",
        "severity": "warning"
    }],
    "declaration-property-unit-blacklist": [ [], {
        "message": "We do not expect this declaration property unit",
        "severity": "warning"
    }],
    "declaration-property-value-blacklist": [ {
        "display": ["/([a-z]*-)?flex/"],
    }, {
        "message": "We do not expect this declaration property value",
        "severity": "warning"
    }],

    "block-closing-brace-empty-line-before": [ "never", {
        "message": "We do not expect an empty line before the closing brace",
        "severity": "warning"
    }],
    "block-closing-brace-newline-after": [ "always", {
        "message": "We expect a newline after a closing brace",
        "severity": "warning"
    }],
    "block-closing-brace-newline-before": [ "always", {
        "message": "We expect a newline before a closing brace",
        "severity": "warning"
    }],
    "block-closing-brace-space-after": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "block-closing-brace-space-before": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "block-no-empty": [ true, {
        "message": "We do not expect empty blocks",
        "severity": "warning"
    }],
    "block-opening-brace-newline-after": [ "always", {
        "message": "We expect a newline after an opening brace",
        "severity": "warning"
    }],
    "block-opening-brace-newline-before": [, {
        "message": "We do not expect a newline before a opening brace",
        "severity": "warning"
    }],
    "block-opening-brace-space-after": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "block-opening-brace-space-before": [ "always", {
        "message": "We expect a space before a opening brace",
        "severity": "warning"
    }],

    "selector-attribute-brackets-space-inside": [ "always", {
        "message": "We expect space inside attribute brackets",
        "severity": "warning"
    }],
    "selector-attribute-operator-space-after": [ "never", {
        "message": "We expect a space after an attribute operator",
        "severity": "warning"
    }],
    "selector-attribute-operator-space-before": [ "never", {
        "message": "We do not expect a space before an attribute operator",
        "severity": "warning"
    }],
    "selector-attribute-quotes": [ "always", {
        "message": "We expect selector attribute quotes",
        "severity": "warning"
    }],
    "selector-class-pattern": [ "[a-z]+(-[a-z]+)*", {
        "message": "We expect a class name to adhere to /[a-z]+(-[a-z]+)*/",
        "severity": "warning"
    }],
    "selector-combinator-space-after": [ "always", {
        "message": "We expect a space after a selector combinator",
        "severity": "warning"
    }],
    "selector-combinator-space-before": [ "always", {
        "message": "We expect a space before a selector combinator",
        "severity": "warning"
    }],
    "selector-descendant-combinator-no-non-space": [ true, {
        "message": "We expect single spaces between descendant combinators",
        "severity": "warning"
    }],
    "selector-max-compound-selectors": [ 2, {
        "message": "We expect max. 2 compound selectors",
        "severity": "warning"
    }],
    "selector-max-specificity": [ "0,2,0", {
        "message": "We expect a max. specificity of 0 (ids), 2 (classes), 0 (types)",
        "severity": "warning"
    }],
    "selector-no-qualifying-type": [ true, {
        "message": "We do not expect qualifying type selectors",
        "severity": "warning"
    }],
    "selector-no-vendor-prefix": [ true, {
        "message": "We do not expect vendor prefix selectors",
        "severity": "warning"
    }],
    "selector-pseudo-class-case": [ "lower", {
        "message": "We export lower case for pseudo classes",
        "severity": "warning"
    }],
    "selector-pseudo-class-no-unknown": [ true, {
        "message": "We do not expect unknown pseudo classes",
        "severity": "warning"
    }],
    "selector-pseudo-class-parentheses-space-inside": [ "never", {
        "message": "We do not expect spaces inside pseudo class parentheses",
        "severity": "warning"
    }],
    "selector-pseudo-element-case": [ "lower", {
        "message": "We expect pseudo elements to be lower case",
        "severity": "warning"
    }],
    "selector-pseudo-element-colon-notation": [ "single", {
        "message": "We expect single quotes notation for pseudo elements",
        "severity": "warning"
    }],
    "selector-pseudo-element-no-unknown": [ true, {
        "message": "We do not expect unknown pseudo elements",
        "severity": "warning"
    }],
    "selector-type-case": [ "lower", {
        "message": "We expect type selectors to be lowercase",
        "severity": "warning"
    }],
    "selector-type-no-unknown": [ true, {
        "message": "We do not expect unknown type selectors",
        "severity": "warning",
        "ignoreTypes": ["/^[1-9]/"]
    }],
    "selector-max-empty-lines": [ 0, {
        "message": "We expect no empty lines in selectors",
        "severity": "warning"
    }],
    "selector-list-comma-newline-after": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "selector-list-comma-newline-before": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "selector-list-comma-space-after": [ "always", {
        "message": "We expect a space after the comma in a selector list",
        "severity": "warning"
    }],
    "selector-list-comma-space-before": [ "never", {
        "message": "We do not expect a space before the comma in a selector list",
        "severity": "warning"
    }],
    "rule-empty-line-before": [ "always", {
        "message": "We expect an empty line between rules",
        "severity": "warning"
    }],
    "media-feature-colon-space-after": [ "always", {
        "message": "We expect a space after the colon in media features",
        "severity": "warning"
    }],
    "media-feature-colon-space-before": [ "never", {
        "message": "We do not expect a space before the colon in media features",
        "severity": "warning"
    }],
    "media-feature-name-case": [ "lower", {
        "message": "We expect media featues to be lowercase",
        "severity": "warning"
    }],
    "media-feature-name-no-unknown": [ true, {
        "message": "We do not expect unknown media features",
        "severity": "warning"
    }],
    "media-feature-name-no-vendor-prefix": [ true, {
        "message": "We do not expect vendor prefixes in media features",
        "severity": "warning"
    }],
    "media-feature-parentheses-space-inside": [ "never", {
        "message": "We do not expect spaces inside media feature parentheses",
        "severity": "warning"
    }],
    "media-feature-range-operator-space-after": [ "always", {
        "message": "We expect a space after the range operator",
        "severity": "warning"
    }],
    "media-feature-range-operator-space-before": [ "always", {
        "message": "We expect a space before the range operator",
        "severity": "warning"
    }],
    "media-query-list-comma-newline-after": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "media-query-list-comma-newline-before": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "media-query-list-comma-space-after": [ "always", {
        "message": "We expect a space after a query list comma in media queries",
        "severity": "warning"
    }],
    "media-query-list-comma-space-before": [ "never", {
        "message": "We expect a space before a query list comma in media queries",
        "severity": "warning"
    }],
    "at-rule-blacklist": [ [], {
        "message": "",
        "severity": "warning"
    }],
    "at-rule-empty-line-before": [ "always", {
        "except": ["first-nested"],
        "message": "We expect a newline before an at-rule",
        "severity": "warning"
    }],
    "at-rule-name-case": [ "lower", {
        "message": "We expect at-rules to be lowercase",
        "severity": "warning"
    }],
    "at-rule-name-newline-after": [ "always", {
        "message": "",
        "severity": "warning"
    }],
    "at-rule-name-space-after": [ "always", {
        "message": "We expect a space after a at-rule name",
        "severity": "warning"
    }],
    "at-rule-no-unknown": [ true, {
        "message": "We do not expect unknown at-rules",
        "severity": "warning"
    }],
    "at-rule-no-vendor-prefix": [ true, {
        "message": "We do not expect vendor prefixes in at-rules",
        "severity": "warning"
    }],
    "at-rule-semicolon-newline-after": [ "always", {
        "message": "We expect a newline after an at-rule semicolon",
        "severity": "warning"
    }],
    "comment-empty-line-before": [ "always", {
        "except": ["first-nested"],
        "message": "We expect an empty line before a comment",
        "severity": "warning"
    }],
    "comment-no-empty": [ true, {
        "message": "We expect no empty comments",
        "severity": "warning"
    }],
    "comment-whitespace-inside": [ "always", {
        "message": "We expect whitespace between the comment and the comment markers",
        "severity": "warning"
    }],
    "comment-word-blacklist": [ ["unicorn"], {
        "message": "We do not expect the word 'unicorn' to be used in comments",
        "severity": "warning"
    }],
    "indentation": [ 2, {
        "message": "We expect an indentation of 2 spaces",
        "severity": "warning"
    }],
    "max-empty-lines": [ 1, {
        "message": "We expect max. 1 empty line",
        "severity": "warning"
    }],
    "max-nesting-depth": [ 6, {
        "message": "We expect a max. nesting depth of 6",
        "severity": "warning"
    }],
    "no-duplicate-selectors": [ true, {
        "message": "We do not expect duplicate selectors",
        "severity": "warning"
    }],
    "no-empty-source": [ true, {
        "message": "We do not expect empty sources",
        "severity": "warning"
    }],
    "no-eol-whitespace": [ true, {
        "message": "We do not expect end of line whitespace",
        "severity": "warning"
    }],
    "no-extra-semicolons": [ true, {
        "message": "We do not expect extra semicolons",
        "severity": "warning"
    }],
    "no-invalid-double-slash-comments": [ true, {
        "message": "We do not expect ",
        "severity": "warning"
    }],
    "no-missing-end-of-source-newline": [ true, {
        "message": "We expect a newline at the end of the source",
        "severity": "warning"
    }],
    "no-unknown-animations": [ true, {
        "message": "We do not expect unknown animations",
        "severity": "warning"
    }]
  }
}
